version: 2.1

executors:  
  default:  
    working_directory: ~/project
    docker:
      - image: circleci/ruby:3.0.2-node
        environment:
          - BUNDLER_VERSION: 2.2.22
          - RAILS_ENV: test
          - DB_HOST: 127.0.0.1
      - image: circleci/mysql:8.0
        environment:
          - MYSQL_ROOT_HOST: '%'
          - MYSQL_ALLOW_EMPTY_PASSWORD: true
commands:
  setup:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./backend/Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            cd ./backend
            gem install bundler -v 2.2.22
            bundle install --jobs=4 --retry=3
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "./backend/Gemfile.lock" }}
  db_setup:
    steps:
      - run:
          name: Use specific database.yml
          command: mv ./backend/config/database.yml.ci ./backend/config/database.yml
      - run:
          name: database setup
          command: |
            cd ./backend
            rails db:create
            rails db:migrate

jobs:
  build:
    executor: default
    environment:
      RAILS_ENV: test
    working_directory: ~/project
    steps:
      - checkout
      - setup
      - db_setup
      - run:
          name: rubocop
          command: |
            cd ./backend
            bundle exec rubocop
      - run:
          name: rspec
          command: |
            cd ./backend
            bin/rspec

workflows:
  version: 2
  build:
    jobs:
      - build